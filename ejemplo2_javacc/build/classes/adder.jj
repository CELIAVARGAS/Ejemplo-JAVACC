options {
	STATIC = false;
}

PARSER_BEGIN(Adder)
        
	public class Adder {
            private Integer valx;
            private Integer valy;
            private Integer valz;

            public Adder(Integer valx,Integer valy,Integer valz){
                this.valx=valx;
                this.valy=valy;
                this.valz=valz;
            }

           public Integer getValx(){
            return this.valx;
           }
           public Integer getValy(){
            return this.valy;
           }
            public Integer getValz(){
            return this.valz;
           }
        }

PARSER_END(Adder)

SKIP  : { " " | "\n" | "\r" | "\r\n" }
TOKEN : { < MAS : "+" > | < MENOS : "-" > | < MUL : "*" > | < DIV : "/" >}
TOKEN : { < LETRAX : "X" > | < LETRAY : "Y" > | < LETRAZ : "Z" >}
TOKEN : { < IGUAL : "=" > }
TOKEN : { < PUNTOYCOMA : ";" > | < COMA : "," >}
TOKEN : { < NUMBER : (["0"-"9"])+ > }
TOKEN : { <IDENTIFIER: <LETTER>(<LETTER>|<NUMBER>)*> | <LETTER: (["a"-"z","A"-"Z"])>|<CADENA: ("\"")<IDENTIFIER>("\"")>}

int Start(): 
{Integer numero,lx,ly,lz; Adder letras; }{
    letras=Z() numero=X(letras)
    { 
    lx=letras.getValx();
    ly=letras.getValy();
    lz=letras.getValz();
    System.out.println("valores de letras  "+lx  +"---"+ly+"---"+lz);
    System.out.println("El resultado es "+ numero );
    return numero;
    }
}

Adder Z():
{Token valx;Token valy;Token valz;}
{
    <LETRAX> <IGUAL> valx=<NUMBER> <COMA> <LETRAY> <IGUAL> valy=<NUMBER> <COMA> <LETRAZ> <IGUAL> valz=<NUMBER> <PUNTOYCOMA> 
    {return new Adder(Integer.parseInt(valx.image),Integer.parseInt(valy.image),Integer.parseInt(valz.image));}
}

int X(Adder letras):
{Integer numero,resultado;}
{    
    numero=T(letras) resultado=XP(numero, letras) 
    {
    System.out.println("El resultado XP es "+ resultado );
    return resultado;
    }
  
}

int XP( Integer val, Adder letras):
{Integer numero; Integer resultado,sum,res;}
{
   <MAS> numero=T(letras) 
    {
    sum=val+numero;
    }
   resultado= XP(sum, letras) 
    {
    System.out.println("valores de suma es   "+ resultado);
    return resultado;
    }
   |<MENOS> numero=T(letras) 
    {
    res=val+numero;
    }
   resultado= XP(res, letras) 
    {
    System.out.println("valores de resta es   " +resultado);
    return resultado;
    }
   |
    {
    System.out.println("valor de lambda    "+ val );
    return val;
    }
}

int T(Adder letras):
{Integer numero; Integer resultado;}{
    numero=F(letras) resultado=TP(numero,letras)  
    {
    System.out.println("El valor de T es "+ resultado );
    return resultado;
    }
}

int TP(Integer val,Adder letras):
{Integer numero; Integer resultado;Integer mult, div;}
{
   <MUL> numero=F(letras) 
    {
    mult=val*numero;
    }
   resultado=TP(mult,letras)  
    {
    System.out.println("valores de multiplicacion es   " +resultado);
    return resultado;
    }
   | <DIV> numero=F(letras) 
    {
    div=val*numero;
    }
   resultado=TP(div,letras) 
    {
    System.out.println("valores de division es   " +resultado);
    return resultado;
    }
   | 
    {
    System.out.println("valor de lambda    " +val );
    return val;
    }
}

int F(Adder letras):
{Token numero;}
{
    numero=<NUMBER> 
    {return Integer.parseInt(numero.image);}
    |<LETRAX> {return letras.getValx();}
    |<LETRAY> {return letras.getValy();}
    |<LETRAZ> {return letras.getValz();}
}

